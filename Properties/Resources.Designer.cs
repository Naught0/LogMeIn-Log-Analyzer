//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LogAnalyzer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LogAnalyzer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///    &quot;AV Updates&quot;: {
        ///        &quot;0&quot;: &quot;Success&quot;,
        ///        &quot;-1&quot;: &quot;Wrong parameters passed to the function&quot;,
        ///        &quot;-2&quot;: &quot;Resources allocation problem&quot;,
        ///        &quot;-100&quot;: &quot;Unknown error&quot;,
        ///        &quot;-1000&quot;: &quot;Unknown option&quot;,
        ///        &quot;-1001&quot;: &quot;Invalid option value&quot;,
        ///        &quot;-1002&quot;: &quot;Could not resolve server&quot;,
        ///        &quot;-1003&quot;: &quot;Could not resolve proxy&quot;,
        ///        &quot;-1004&quot;: &quot;Could not connect to proxy or server&quot;,
        ///        &quot;-1005&quot;: &quot;Could not authenticate to proxy or server&quot;,
        ///        &quot;-1006&quot;: &quot;Invalid URL&quot;,
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string errorInfo {
            get {
                return ResourceManager.GetString("errorInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;6&quot;: {
        ///    &quot;Description&quot;: &quot;Specified event object handle is invalid.  An application attempts to use an event object, but the specified handle is not valid.&quot;
        ///  },
        ///  &quot;8&quot;: {
        ///    &quot;Description&quot;: &quot;Insufficient memory available.  An application used a Windows Sockets function that directly maps to a Windows function. The Windows function is indicating a lack of required memory resources.&quot;
        ///  },
        ///  &quot;87&quot;: {
        ///    &quot;Description&quot;: &quot;One or more parameters are invalid.  An application used a Windows Sockets func [rest of string was truncated]&quot;;.
        /// </summary>
        public static string winSockErrorInfo {
            get {
                return ResourceManager.GetString("winSockErrorInfo", resourceCulture);
            }
        }
    }
}
